<%#
# Form Partial

This partial is rendered on a resource's `new` and `edit` pages,
and renders all form fields for a resource's editable attributes.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Form][1].
  Contains helper methods to display a form,
  and knows which attributes should be displayed in the resource's form.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Form
%>

<%= simple_form_for([namespace, page.resource], html: { class: "form" }) do |f| %>
  <% if page.resource.errors.any? %>
    <div id="error_explanation">
      <h2>
        <%= pluralize(page.resource.errors.count, "error") %>
        prohibited this <%= page.resource_name %> from being saved:
      </h2>

      <ul>
        <% page.resource.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="body-site"></div>
    <div class="container">
      <div class="row">
        <strong style="font-weight: bold; font-size:20px;"><p align="center">Create Categories and  Subcategories</p></strong><br>
        <div class="alert alert-danger">
          <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
          <strong>Note!</strong> This form can be used to create both Categories and Subcategories. To create a Subcategory, then you have to
          choose Category where it will belong. Otherwise, just type in the Category to be created and click create button.
        </div>
        <div class="col-sm-12 col-xs-12">
          <%= simple_form_for Category.new, html: { class: 'form-horizontal' } do |f| %>
              <%= f.input :name, placeholder: 'Name' %><br>
              <div class="form-horizontal form-group">
                <%#= f.collection_select :parent_id, Category.top_level, :id, :name, {prompt: " "},input_html: {class: "dropdown-toggle"} %>
                <label>Choose the Category where you want your subcategory to belongs to.</label><br>
                <%= f.select :parent_id, options_from_collection_for_select(Category.top_level, :id, :name), {prompt: 'Choose a Category to create Subcategory'}, {class: 'form-control'} %><br>
              </div>

              <div class="container">
                <div class="row">
                  <div class="col-md-12 text-center">
                    <%= f.button :submit, 'Create', class: 'btn btn-success btn-md' %>
                  </div>
                </div>
              </div>
          <% end %>
        </div>
      </div>
    </div>
    <%= render 'shared/three_breaks' %>

<% end %>
